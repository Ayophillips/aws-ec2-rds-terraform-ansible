name: Ansible Deployment
on:
  workflow_dispatch:

jobs:
  ansible:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ANSIBLE_VAULT_PASSWORD: ${{secrets.ANSIBLE_VAULT_PASSWORD}}
      SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
      TF_VAR_DB_PASSWORD: ${{secrets.TF_VAR_DB_PASSWORD}}

    steps:
      - uses: actions/checkout@v4

      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible
          ansible --version

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Terraform Init and Output
        working-directory: ./terraform
        run: |
          terraform init
          terraform output -json > tf_outputs.json
          cat tf_outputs.json

      - name: Generate Inventory
        working-directory: ./terraform
        run: |
          if [ ! -f ./scripts/generate_inventory_file.sh ]; then
            echo "Error: generate_inventory_file.sh not found"
            exit 1
          fi
          chmod +x ./scripts/generate_inventory_file.sh
          ./scripts/generate_inventory_file.sh || exit 1

      - name: Create Ansible Vault Password File
        working-directory: ./ansible
        run: | 
          echo "${{ secrets.ANSIBLE_VAULT_PASSWORD }}" > .vault_pass
          chmod 600 .vault_pass

      - name: Run Ansible Playbook
        working-directory: ./ansible
        run: |
          DB_HOST=$(cat ../terraform/tf_outputs.json | jq -r '.instances.value.database')
          ansible-playbook playbook.yml \
            --vault-password-file .vault_pass \
            -e "db_password=$TF_VAR_DB_PASSWORD" \
            -e "db_host=${DB_HOST}" \
            -e "db_user=dbadmin" \
            -e "db_name=appdb" \
            -e "db_port=5432"

      - name: Cleanup Sensitive Files
        if: always()
        run: |
          rm -f ~/.ssh/id_rsa*
          rm -f .vault_pass
          rm -f terraform/tf_outputs.json