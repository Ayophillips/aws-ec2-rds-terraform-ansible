name: Terraform Apply

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  terraform:
    if: github.event.pull_request.merged == true
    name: Terraform Apply and Ansible Deploy
    runs-on: ubuntu-latest
    env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_DB_PASSWORD: ${{secrets.TF_VAR_DB_PASSWORD}}
          ANSIBLE_VAULT_PASSWORD: ${{secrets.ANSIBLE_VAULT_PASSWORD}}
          SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Terraform Format Check
        working-directory: ./terraform
        run: terraform fmt -check -recursive

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -var="db_password=$TF_VAR_DB_PASSWORD"
        
      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve -var="db_password=$TF_VAR_DB_PASSWORD"

      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible
          ansible --version

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Generate Inventory
        working-directory: ./terraform
        run: |
          if [ ! -f ./scripts/generate_inventory.sh ]; then
            echo "Error: generate_inventory.sh not found"
            exit 1
          fi
          chmod +x ./scripts/generate_inventory.sh
          ./scripts/generate_inventory.sh || exit 1

      - name: Create Ansible Vault Password File
        working-directory: ./ansible
        run: | 
          echo "${{ secrets.ANSIBLE_VAULT_PASSWORD }}" > .vault_pass
          chmod 600 .vault_pass

      - name: Run Ansible Playbook
        working-directory: ./ansible
        run: |
          ansible-playbook ansible/playbook.yml \
            --vault-password-file .vault_pass \
            -e "db_password=$TF_VAR_DB_PASSWORD" \
            -e "db_host=$(terraform output -raw db_endpoint)" \
            -e "db_user=dbadmin" \
            -e "db_name=appdb" \
            -e "db_port=5432"

      - name: Cleanup Sensitive Files
        if: always()
        run: |
          rm -f ~/.ssh/id_rsa*
          rm -f .vault_pass